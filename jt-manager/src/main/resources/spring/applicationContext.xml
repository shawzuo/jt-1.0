<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<!-- 1.开启包扫描 -->
	<context:component-scan base-package="com.jt"/>
	
	<!-- 2.导入外部配置类 jdbc.property   context:property-placeholder 只能引入前缀相同的配置文件-->
	<!-- <context:property-placeholder location="classpath:/properties/jdbc.propert"/> -->
	
	<!-- 2.1 PropertyPlaceholderConfigurer可以导入任意配置文件 -->
	<bean id="propertyPlaceholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/properties/jdbc.property</value>
			</list>
		</property>
	</bean>
	
	<!-- 3.配置数据源 -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<!-- 数据库驱动 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<!-- 相应驱动的jdbcUrl -->
		<property name="jdbcUrl" value="${jdbc.url}" />
		<!-- 数据库的用户名 -->
		<property name="username" value="${jdbc.username}" />
		<!-- 数据库的密码 -->
		<property name="password" value="${jdbc.password}" />
		<!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->
		<property name="idleMaxAge" value="30" />
		<!-- 每个分区最大的连接数 -->
		<property name="maxConnectionsPerPartition" value="150" />
		<!-- 每个分区最小的连接数 -->
		<property name="minConnectionsPerPartition" value="5" />
	</bean>
	
	<!-- 4 配置声明式事物处理 
			4.1声明事物管理器
			4.2自定义事物通知及策略
			4.3生成事务切面
	-->
	<!-- 声明事物管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 添加数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 定义通知及策略 
			transaction-manager默认值为transactionManager
			如果事物管理器id为 transactionManager，则该配置可以省略 
				<tx:advice id=""></tx:advice>
		事务策略：
			新增： insert,save,add  需要事务控制
			修改：  update,modify 需要事务控制
			删除：  delete  需要事务控制
			查询： find,select,query 不需要事务控制
		自定义事物策略：
			name：需要事务控制的方法一般以*结尾
			propagation：事务传播属性
				.1 REQUIRED 必须添加事务
				.2 SUPPORTS 表示事务支持的一般都这么配
	-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="modify*" propagation="REQUIRED"/>
			
			<tx:method name="find*" propagation="SUPPORTS"/>
			<tx:method name="select*" propagation="SUPPORTS"/>
			
			<!-- 其他方法 使用只读 -->
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	
	<!-- 4.3 配置事务切面  通知+切入点=切面
			excution(返回值类型 包名.类名.方法名（参数列表）)
			  注意中间空格不能省略
			  lg:  execution(* com.jt.manage.dao..*.*(..))
			  		表示拦截返回值为任意类型的 包名为com.jt.manage.dao下的全部类的任意方法任意参数列表；
	  -->
	<aop:config>
		<aop:pointcut expression="execution(* com.jt.manage.dao..*.*(..))" id="pc"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
	</aop:config>

	
	
	
	
	
</beans>